{"ast":null,"code":"var _jsxFileName = \"D:\\\\tripSathi\\\\tripsathi-frontend\\\\src\\\\Components\\\\Pages\\\\InfiniteScroll.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useState } from \"react\";\nimport \"./InfiniteScroll.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  height: 190,\n  border: \"1px solid green\",\n  margin: 60,\n  padding: 8\n};\nconst trips = [];\n\n//   class Appp extends React.Component {\n//     state = {\n//       items: Array.from({ length: 20 })\n//     };\n\n//     fetchMoreData = () => {\n//       // a fake async api call like which sends\n//       // 20 more records in 1.5 secs\n//       setTimeout(() => {\n//         this.setState({\n//           items: this.state.items.concat(Array.from({ length: 20 }))\n//         });\n//       }, 1500);\n//     };\n\n//     render() {\n//       return (\n//         <div>\n//           <h1>demo: react-infinite-scroll-component</h1>\n//           <hr />\n//           <InfiniteScroll\n//             dataLength={this.state.items.length}\n//             next={this.fetchMoreData}\n//             hasMore={true}\n//             loader={<h4>Loading...</h4>}\n//           >\n//             {this.state.items.map((i, index) => (\n//               <div style={style} key={index}>\n//                 div - #{index}\n//               </div>\n//             ))}\n//           </InfiniteScroll>\n//         </div>\n//       );\n//     }\n//   }\n\nconst InfiniteScrooll = () => {\n  _s();\n  const [items, setItems] = useState(Array.from({\n    length: 20\n  }));\n  const fetchMoreData = () => {\n    setTimeout(() => {\n      //setItems(arr => [...items, `${items.length}`]);\n      setItems(items.concat(Array.from({\n        length: 20\n      })));\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Join Your Travel Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: items.length,\n      next: fetchMoreData,\n      hasMore: true,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this),\n      children: items.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        children: [\"Post Number - #\", index + 1, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Trip Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No of People Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(InfiniteScrooll, \"8Vy6y523polr8+JyBGpusRsqGkQ=\");\n_c = InfiniteScrooll;\nexport default InfiniteScrooll;\nvar _c;\n$RefreshReg$(_c, \"InfiniteScrooll\");","map":{"version":3,"names":["React","render","InfiniteScroll","useState","jsxDEV","_jsxDEV","style","height","border","margin","padding","trips","InfiniteScrooll","_s","items","setItems","Array","from","length","fetchMoreData","setTimeout","concat","children","className","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","next","hasMore","loader","map","i","index","_c","$RefreshReg$"],"sources":["D:/tripSathi/tripsathi-frontend/src/Components/Pages/InfiniteScroll.js"],"sourcesContent":["import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useState } from \"react\";\r\nimport \"./InfiniteScroll.css\";\r\n\r\n\r\n\r\nconst style = {\r\n    height: 190,\r\n    border: \"1px solid green\",\r\n    margin: 60,\r\n    padding: 8\r\n  };\r\n\r\n  const trips = []\r\n  \r\n//   class Appp extends React.Component {\r\n//     state = {\r\n//       items: Array.from({ length: 20 })\r\n//     };\r\n  \r\n//     fetchMoreData = () => {\r\n//       // a fake async api call like which sends\r\n//       // 20 more records in 1.5 secs\r\n//       setTimeout(() => {\r\n//         this.setState({\r\n//           items: this.state.items.concat(Array.from({ length: 20 }))\r\n//         });\r\n//       }, 1500);\r\n//     };\r\n  \r\n//     render() {\r\n//       return (\r\n//         <div>\r\n//           <h1>demo: react-infinite-scroll-component</h1>\r\n//           <hr />\r\n//           <InfiniteScroll\r\n//             dataLength={this.state.items.length}\r\n//             next={this.fetchMoreData}\r\n//             hasMore={true}\r\n//             loader={<h4>Loading...</h4>}\r\n//           >\r\n//             {this.state.items.map((i, index) => (\r\n//               <div style={style} key={index}>\r\n//                 div - #{index}\r\n//               </div>\r\n//             ))}\r\n//           </InfiniteScroll>\r\n//         </div>\r\n//       );\r\n//     }\r\n//   }\r\n\r\nconst InfiniteScrooll = () =>{\r\n    const [items, setItems] = useState(Array.from({ length: 20 }));\r\n\r\n    const fetchMoreData =() =>{\r\n        setTimeout(() => {\r\n            //setItems(arr => [...items, `${items.length}`]);\r\n            setItems(items.concat(Array.from({ length: 20 })));\r\n        }, 1500);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n          <h1 className=\"header\">Join Your Travel Group</h1>\r\n          <hr />\r\n          <InfiniteScroll\r\n            dataLength={items.length}\r\n            next={fetchMoreData}\r\n            hasMore={true}\r\n            loader={<h4>Loading...</h4>}\r\n          >\r\n            {items.map((i, index) => (\r\n              <div style={style} key={index}>\r\n                Post Number - #{index+1}\r\n                <div>\r\n                  <p>Trip Name: </p>\r\n                  <p>Destination</p>\r\n                  <p>Date</p>\r\n                  <p>No of People Required</p>\r\n                  <button>Join</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </InfiniteScroll>\r\n        </div>\r\n    )\r\n} \r\nexport default InfiniteScrooll;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}