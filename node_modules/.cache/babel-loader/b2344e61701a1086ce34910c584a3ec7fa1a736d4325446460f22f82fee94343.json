{"ast":null,"code":"var _jsxFileName = \"D:\\\\tripSathi\\\\tripsathi-frontend\\\\src\\\\Components\\\\Pages\\\\InfiniteScroll.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { useState } from \"react\";\nimport \"./InfiniteScroll.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  height: 210,\n  border: \"1px solid green\",\n  margin: 60,\n  padding: 8\n};\nconst trips = [{\n  \"TripName\": \"LetsGoGoa\",\n  \"Destination\": \"Goa\",\n  \"Date\": new Date('2023-05-23'),\n  \"No_of_people_required\": 10,\n  \"Budget\": 10000\n}, {\n  \"TripName\": \"PondicherryTrip\",\n  \"Destination\": \"Pondicherry\",\n  \"Date\": new Date('2023-05-23'),\n  \"No of people required\": 11,\n  \"Budget\": 6000\n}, {\n  \"TripName\": \"ManaliTrip\",\n  \"Destination\": \"Mana\",\n  \"Date\": new Date('2023-05-23'),\n  \"No of people required\": 11,\n  \"Budget\": 6000\n}];\n\n//   class Appp extends React.Component {\n//     state = {\n//       items: Array.from({ length: 20 })\n//     };\n\n//     fetchMoreData = () => {\n//       // a fake async api call like which sends\n//       // 20 more records in 1.5 secs\n//       setTimeout(() => {\n//         this.setState({\n//           items: this.state.items.concat(Array.from({ length: 20 }))\n//         });\n//       }, 1500);\n//     };\n\n//     render() {\n//       return (\n//         <div>\n//           <h1>demo: react-infinite-scroll-component</h1>\n//           <hr />\n//           <InfiniteScroll\n//             dataLength={this.state.items.length}\n//             next={this.fetchMoreData}\n//             hasMore={true}\n//             loader={<h4>Loading...</h4>}\n//           >\n//             {this.state.items.map((i, index) => (\n//               <div style={style} key={index}>\n//                 div - #{index}\n//               </div>\n//             ))}\n//           </InfiniteScroll>\n//         </div>\n//       );\n//     }\n//   }\n\nconst InfiniteScrooll = () => {\n  _s();\n  const [items, setItems] = useState(Array.from({\n    length: 2\n  }));\n  const fetchMoreData = () => {\n    setTimeout(() => {\n      //setItems(arr => [...items, `${items.length}`]);\n      setItems(items.concat(Array.from({\n        length: 1\n      })));\n    }, 1500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Join Your Travel Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: items.length,\n      next: fetchMoreData,\n      hasMore: true,\n      loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this),\n      children: items.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        children: [\"Post Number - #\", index + 1, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Trip Name: \", trips[0].TripName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Destination: \", trips.Destination]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", trips.Date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"No of People Required: \", trips.No_of_people_required]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Budget: \", trips.Budget]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(InfiniteScrooll, \"8j014/pCBrL9FH8jcZsSZKEvjYs=\");\n_c = InfiniteScrooll;\nexport default InfiniteScrooll;\nvar _c;\n$RefreshReg$(_c, \"InfiniteScrooll\");","map":{"version":3,"names":["React","render","InfiniteScroll","useState","jsxDEV","_jsxDEV","style","height","border","margin","padding","trips","Date","InfiniteScrooll","_s","items","setItems","Array","from","length","fetchMoreData","setTimeout","concat","children","className","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","next","hasMore","loader","map","i","index","TripName","Destination","No_of_people_required","Budget","_c","$RefreshReg$"],"sources":["D:/tripSathi/tripsathi-frontend/src/Components/Pages/InfiniteScroll.js"],"sourcesContent":["import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useState } from \"react\";\r\nimport \"./InfiniteScroll.css\";\r\n\r\n\r\n\r\nconst style = {\r\n    height: 210,\r\n    border: \"1px solid green\",\r\n    margin: 60,\r\n    padding: 8\r\n  };\r\n\r\n  const trips = [\r\n    {\r\n      \"TripName\" : \"LetsGoGoa\",\r\n      \"Destination\": \"Goa\",\r\n      \"Date\": new Date('2023-05-23'),\r\n      \"No_of_people_required\" : 10,\r\n      \"Budget\": 10000\r\n    },\r\n    {\r\n      \"TripName\" : \"PondicherryTrip\",\r\n      \"Destination\": \"Pondicherry\",\r\n      \"Date\": new Date('2023-05-23'),\r\n      \"No of people required\" : 11,\r\n      \"Budget\": 6000\r\n    },\r\n    {\r\n      \"TripName\" : \"ManaliTrip\",\r\n      \"Destination\": \"Mana\",\r\n      \"Date\": new Date('2023-05-23'),\r\n      \"No of people required\" : 11,\r\n      \"Budget\": 6000\r\n    }\r\n  ]\r\n  \r\n//   class Appp extends React.Component {\r\n//     state = {\r\n//       items: Array.from({ length: 20 })\r\n//     };\r\n  \r\n//     fetchMoreData = () => {\r\n//       // a fake async api call like which sends\r\n//       // 20 more records in 1.5 secs\r\n//       setTimeout(() => {\r\n//         this.setState({\r\n//           items: this.state.items.concat(Array.from({ length: 20 }))\r\n//         });\r\n//       }, 1500);\r\n//     };\r\n  \r\n//     render() {\r\n//       return (\r\n//         <div>\r\n//           <h1>demo: react-infinite-scroll-component</h1>\r\n//           <hr />\r\n//           <InfiniteScroll\r\n//             dataLength={this.state.items.length}\r\n//             next={this.fetchMoreData}\r\n//             hasMore={true}\r\n//             loader={<h4>Loading...</h4>}\r\n//           >\r\n//             {this.state.items.map((i, index) => (\r\n//               <div style={style} key={index}>\r\n//                 div - #{index}\r\n//               </div>\r\n//             ))}\r\n//           </InfiniteScroll>\r\n//         </div>\r\n//       );\r\n//     }\r\n//   }\r\n\r\nconst InfiniteScrooll = () =>{\r\n    const [items, setItems] = useState(Array.from({ length: 2 }));\r\n\r\n    const fetchMoreData =() =>{\r\n        setTimeout(() => {\r\n            //setItems(arr => [...items, `${items.length}`]);\r\n            setItems(items.concat(Array.from({ length: 1 })));\r\n        }, 1500);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n          <h1 className=\"header\">Join Your Travel Group</h1>\r\n          <hr />\r\n          <InfiniteScroll\r\n            dataLength={items.length}\r\n            next={fetchMoreData}\r\n            hasMore={true}\r\n            loader={<h4>Loading...</h4>}\r\n          >\r\n            {items.map((i, index) => (\r\n              <div style={style} key={index}>\r\n                Post Number - #{index+1}\r\n                <div>\r\n                  <p>Trip Name: {trips[0].TripName}</p>\r\n                  <p>Destination: {trips.Destination}</p>\r\n                  <p>Date: {trips.Date}</p>\r\n                  <p>No of People Required: {trips.No_of_people_required}</p>\r\n                  <p>Budget: {trips.Budget}</p>\r\n                  <button>Join</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </InfiniteScroll>\r\n        </div>\r\n    )\r\n} \r\nexport default InfiniteScrooll;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}